lwd = 2
)
detach("package:datasets", unload= TRUE)
library(datasets)
head(lynx)
hist(lynx,
breaks = 14,
freq = FALSE,
col = "thistle1",
main = "Histogram of Annual Canadian Lynx Trappings, 1821-1934",
xlab = "Number of Lynx Trapped"
)
curve(dnorm(x, mean = mean(lynx), sd = sd(lynx)),
col = "thistle4",
lwd = 2,
add = TRUE
)
lines(density(lynx),
col = "blue",
lwd = 2
)
lines(density(lynx, adjust = 3),
col = "purple",
lwd = 2
)
rug(lynx,
lwd = 2,
col = "gray"
)
detach("package:datasets", unload= TRUE)
source("C:/localdata/aw807/year 4/GEO3230 Tropical Forests in a changing world/R mess around.R", echo=TRUE)
source("C:/localdata/aw807/year 4/GEO3230 Tropical Forests in a changing world/R mess around.R", echo=TRUE)
source("C:/localdata/aw807/year 4/GEO3230 Tropical Forests in a changing world/R mess around.R", echo=TRUE)
source("C:/localdata/aw807/year 4/GEO3230 Tropical Forests in a changing world/R mess around.R", echo=TRUE)
library(datasets)
head(lynx)
hist(lynx,
breaks = 14,
freq = FALSE,
col = "thistle1",
main = "Histogram of Annual Canadian Lynx Trappings, 1821-1934",
xlab = "Number of Lynx Trapped"
)
curve(dnorm(x, mean = mean(lynx), sd = sd(lynx)),
col = "thistle4",
lwd = 2,
add = TRUE
)
lines(density(lynx),
col = "blue",
lwd = 2
)
lines(density(lynx, adjust = 3),
col = "purple",
lwd = 2
)
rug(lynx,
lwd = 2,
col = "gray"
)
detach("package:datasets", unload= TRUE)
libary
library(ggplot2)
library(ggfortify)
library(e1071)
par(mfrow=c(1, 2))  # divide graph area in 2 columns
plot(density(cars$speed),
main="Density Plot: Speed",
ylab="Frequency", sub=paste("Skewness:",
round(e1071::skewness(cars$speed), 2)))  # density plot for 'speed'
var(acs$age_wife)
acs <- read.csv(url("http://stat511.cwick.co.nz/homeworks/acs_or.csv"))
s <- subset(acs, number_children>2)
mean(acs$age_husband)
median(acs$age_wife)
var(acs$age_wife)
summary(acs)
plot(x=s$age_husband, y=s$age_wife,type='p')
hist(acs$number_children)
counts <- table(acs$bedrooms)
barplot(counts, main="Bedrooms Distribution", xlab = "Number of Bedrooms")
set.seed(100)
x <- rnorm(50, mean = 10, sd = 0.5)
t.test(x,mu=10)
numeric_vector <- c(20,29,24,19,20,22,28,23,19,19)
wilcox.test(numeric_vector, mu=20,conf.int=TRUE)
#  create a x and y dataset for our analysis
x <- c(0.80, 0.83, 1.89, 1.04, 1.45, 1.38, 1.91, 1.64, 0.73, 1.46)
y <- c(1.15, 0.88, 0.90, 0.74, 1.21)
wilcox.test(x, y, alternative = "g")  # g for greater;
t.test(1:10, y = c(7:20))
t.test(x,y,paired=TRUE)
wilcox.test(x,y,paired = TRUE)
set.seed(100)
normaly_disb <- rnorm(100, mean=5, sd=1)
shapiro.test(normaly_disb)
set.seed(100)
not_normaly_disb <- runif(100)
shapiro.test(not_normaly_disb)
x <- rnorm(50)
y <- runif(50)
ks.test(x, y)
x <- rnorm(50)
y <- rnorm(50)
ks.test(x, y)
cor.test(x, y)
cor.test(cars$speed, cars$dist)
head(cars)
scatter.smooth(x=cars$speed, y=cars$dist, main="Dist ~ Speed")
par(mfrow=c(1, 2))  # divide graph area in 2 columns
par(mfrow=c(1, 2))  # divide graph area in 2 columns
boxplot(cars$speed,
main="Speed",
sub=paste("Outlier rows: ",
boxplot.stats(cars$speed)$out))  # box plot for 'speed'
plot(dnorm,
-3,
3,
col = "#cc0000",
lwd = 5,
main = "Standard Normal Distribution",
xlab = "z-scores",
ylab = "Density"
)
library(datasets)
head(mtcars)
cylinders <- table(mtcars$cyl)
barplot(cylinders)
detach("package:datasets", unload= TRUE)
library(datasets)
head(iris)
hist(iris$Sepal.Length)
hist(iris$Petal.Length)
par(mfrow = c(3,1))
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0,3),
ylim = c(0,30),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red"
)
hist(iris$Petal.Width [iris$Species == "versicolor"],
xlim = c(0,3),
ylim = c(0,30),
breaks = 9,
main = "Petal Width for versicolor",
xlab = "",
col = "purple"
)
hist(iris$Petal.Width [iris$Species == "virginica"],
xlim = c(0,3),
ylim = c(0,30),
breaks = 9,
main = "Petal Width for virginica",
xlab = "",
col = "blue"
)
par(mfrow=c(1,1))
detach("package:datasets", unload= TRUE)
library(datasets)
head(mtcars)
plot(mtcars$wt,
mtcars$mpg,
pch = 19,
cex = 1.5,
col = "#cc0000",
main = "MPG as a fucntion of weight of Cars",
xlab = "weight (lbs)",
ylab = "MPG"
)
detach("package:datasets", unload= TRUE)
library(datasets)
head(lynx)
hist(lynx,
breaks = 14,
freq = FALSE,
col = "thistle1",
main = "Histogram of Annual Canadian Lynx Trappings, 1821-1934",
xlab = "Number of Lynx Trapped"
)
curve(dnorm(x, mean = mean(lynx), sd = sd(lynx)),
col = "thistle4",
lwd = 2,
add = TRUE
)
lines(density(lynx),
col = "blue",
lwd = 2
)
lines(density(lynx, adjust = 3),
col = "purple",
lwd = 2
)
rug(lynx,
lwd = 2,
col = "gray"
)
detach("package:datasets", unload= TRUE)
library(shiny)
install.packages("shiny")
library(shiny)
install.packages("shiny")
install.packages("installr")
library("installr")
library("installr")
updateR()
library(terra)
detach("package:terra", unload = TRUE)
install.packages("terra")
install.packages("terra")
install.packages("terra")
#################################################################
##           Practical 6 for GEOM184 - Open Source GIS         ##
##                      27/02/2025                             ##
##                  Creating a ShinyApp                        ##
##                         App.R                               ##
##        code by Alex Wallage (aw807@exeter.ac.uk)         ##
#################################################################
setwd("D:/Backup/OneDrive - University of Exeter/MSc GIS/GEOM184_Open_Source_GIS/Practical6")
# Load packages ----
library(shiny)
library(leaflet)
library(sf)
library(raster)
library(ggplot2)
library(ggiraph)
library(RColorBrewer)
library(terra)
library(leafem)
options(shiny.maxRequestSize = 1000000 * 1024^2)
# ----
# Run global script containing all your relevant data ----
source("Global.R")
# Define UI for visualisation ----
source("UI.R")
ui <- navbarPage("Instream large wood on the River Exe", id = 'nav',
tabPanel("Map",
div(class="outer",
leafletOutput("map", height = "calc(100vh - 70px)")
)
)
)
# Define the server that performs all necessary operations ----
server <- function(input, output, session){
source("Server.R", local = TRUE)
}
# Run the application ----
shinyApp(ui, server)
#################################################################
##           Practical 6 for GEOM184 - Open Source GIS         ##
##                      27/02/2025                             ##
##                  Creating a ShinyApp                        ##
##                         App.R                               ##
##        code by Alex Wallage (aw807@exeter.ac.uk)         ##
#################################################################
setwd("D:/Backup/OneDrive - University of Exeter/MSc GIS/GEOM184_Open_Source_GIS/Practical6")
# Load packages ----
library(shiny)
library(leaflet)
library(sf)
library(raster)
library(ggplot2)
library(ggiraph)
library(RColorBrewer)
library(terra)
library(leafem)
options(shiny.maxRequestSize = 1000000 * 1024^2)
# ----
# Run global script containing all your relevant data ----
source("Global.R")
# Define UI for visualisation ----
source("UI.R")
ui <- navbarPage("Instream large wood on the River Exe", id = 'nav',
tabPanel("Map",
div(class="outer",
leafletOutput("map", height = "calc(100vh - 70px)")
)
)
)
# Define the server that performs all necessary operations ----
server <- function(input, output, session){
source("Server.R", local = TRUE)
}
# Run the application ----
shinyApp(ui, server)
#################################################################
##           Practical 6 for GEOM184 - Open Source GIS         ##
##                      27/02/2025                             ##
##                  Creating a ShinyApp                        ##
##                         App.R                               ##
##        code by Alex Wallage (aw807@exeter.ac.uk)         ##
#################################################################
setwd("D:/Backup/OneDrive - University of Exeter/MSc GIS/GEOM184_Open_Source_GIS/Practical6")
# Load packages ----
library(shiny)
library(leaflet)
library(sf)
library(raster)
library(ggplot2)
library(ggiraph)
library(RColorBrewer)
library(terra)
library(leafem)
options(shiny.maxRequestSize = 1000000 * 1024^2)
# ----
# Run global script containing all your relevant data ----
source("Global.R")
# Define UI for visualisation ----
source("UI.R")
ui <- navbarPage("Instream large wood on the River Exe", id = 'nav',
tabPanel("Map",
div(class="outer",
leafletOutput("map", height = "calc(100vh - 70px)")
)
)
)
# Define the server that performs all necessary operations ----
server <- function(input, output, session){
source("Server.R", local = TRUE)
}
# Run the application ----
shinyApp(ui, server)
#################################################################
##           Practical 6 for GEOM184 - Open Source GIS         ##
##                      27/02/2025                             ##
##                  Creating a ShinyApp                        ##
##                         App.R                               ##
##        code by Alex Wallage (aw807@exeter.ac.uk)         ##
#################################################################
setwd("D:/Backup/OneDrive - University of Exeter/MSc GIS/GEOM184_Open_Source_GIS/Practical6")
# Load packages ----
library(shiny)
library(leaflet)
library(sf)
library(raster)
library(ggplot2)
library(ggiraph)
library(RColorBrewer)
library(terra)
library(leafem)
options(shiny.maxRequestSize = 1000000 * 1024^2)
# ----
# Run global script containing all your relevant data ----
source("Global.R")
# Define UI for visualisation ----
source("UI.R")
ui <- navbarPage("Instream large wood on the River Exe", id = 'nav',
tabPanel("Map",
div(class="outer",
leafletOutput("map", height = "calc(100vh - 70px)")
)
)
)
# Define the server that performs all necessary operations ----
server <- function(input, output, session){
source("Server.R", local = TRUE)
}
# Run the application ----
shinyApp(ui, server)
#################################################################
##           Practical 6 for GEOM184 - Open Source GIS         ##
##                      27/02/2025                             ##
##                  Creating a ShinyApp                        ##
##                         App.R                               ##
##        code by Alex Wallage (aw807@exeter.ac.uk)         ##
#################################################################
setwd("D:/Backup/OneDrive - University of Exeter/MSc GIS/GEOM184_Open_Source_GIS/Practical6")
# Load packages ----
library(shiny)
library(leaflet)
library(sf)
library(raster)
library(ggplot2)
library(ggiraph)
library(RColorBrewer)
library(terra)
library(leafem)
options(shiny.maxRequestSize = 1000000 * 1024^2)
# ----
# Run global script containing all your relevant data ----
source("Global.R")
# Define UI for visualisation ----
source("UI.R")
ui <- navbarPage("Instream large wood on the River Exe", id = 'nav',
tabPanel("Map",
div(class="outer",
leafletOutput("map", height = "calc(100vh - 70px)")
)
)
)
# Define the server that performs all necessary operations ----
server <- function(input, output, session){
source("Server.R", local = TRUE)
}
# Run the application ----
shinyApp(ui, server)
#################################################################
##           Practical 6 for GEOM184 - Open Source GIS         ##
##                      27/02/2025                             ##
##                  Creating a ShinyApp                        ##
##                         App.R                               ##
##        code by Alex Wallage (aw807@exeter.ac.uk)         ##
#################################################################
setwd("D:/Backup/OneDrive - University of Exeter/MSc GIS/GEOM184_Open_Source_GIS/Practical6")
# Load packages ----
library(shiny)
library(leaflet)
library(sf)
library(raster)
library(ggplot2)
library(ggiraph)
library(RColorBrewer)
library(terra)
library(leafem)
options(shiny.maxRequestSize = 1000000 * 1024^2)
# ----
# Run global script containing all your relevant data ----
source("Global.R")
# Define UI for visualisation ----
source("UI.R")
ui <- navbarPage("Instream large wood on the River Exe", id = 'nav',
tabPanel("Map",
div(class="outer",
leafletOutput("map", height = "calc(100vh - 70px)")
)
)
)
# Define the server that performs all necessary operations ----
server <- function(input, output, session){
source("Server.R", local = TRUE)
}
# Run the application ----
shinyApp(ui, server)
#################################################################
##           Practical 6 for GEOM184 - Open Source GIS         ##
##                      27/02/2025                             ##
##                  Creating a ShinyApp                        ##
##                         App.R                               ##
##        code by Alex Wallage (aw807@exeter.ac.uk)         ##
#################################################################
setwd("D:/Backup/OneDrive - University of Exeter/MSc GIS/GEOM184_Open_Source_GIS/Practical6")
# Load packages ----
library(shiny)
library(leaflet)
library(sf)
library(raster)
library(ggplot2)
library(ggiraph)
library(RColorBrewer)
library(terra)
library(leafem)
options(shiny.maxRequestSize = 1000000 * 1024^2)
# ----
# Run global script containing all your relevant data ----
source("Global.R")
# Define UI for visualisation ----
source("UI.R")
ui <- navbarPage("Instream large wood on the River Exe", id = 'nav',
tabPanel("Map",
div(class="outer",
leafletOutput("map", height = "calc(100vh - 70px)")
)
)
)
# Define the server that performs all necessary operations ----
server <- function(input, output, session){
source("Server.R", local = TRUE)
}
# Run the application ----
shinyApp(ui, server)
setwd("D:/Backup/OneDrive - University of Exeter/MSc GIS/GEOM184_Open_Source_GIS/Practical6")
dem  <- rast("assets/Hillshade_Exe_4326.tif")
#################################################################
##           Practical 6 for GEOM184 - Open Source GIS         ##
##                      27/02/2025                             ##
##                  Creating a ShinyApp                        ##
##                         App.R                               ##
##        code by Alex Wallage (aw807@exeter.ac.uk)         ##
#################################################################
setwd("D:/Backup/OneDrive - University of Exeter/MSc GIS/GEOM184_Open_Source_GIS/Practical6")
# Load packages ----
library(shiny)
library(leaflet)
library(sf)
library(raster)
library(ggplot2)
library(ggiraph)
library(RColorBrewer)
library(terra)
library(leafem)
options(shiny.maxRequestSize = 1000000 * 1024^2)
# ----
# Run global script containing all your relevant data ----
source("Global.R")
# Define UI for visualisation ----
source("UI.R")
ui <- navbarPage("Instream large wood on the River Exe", id = 'nav',
tabPanel("Map",
div(class="outer",
leafletOutput("map", height = "calc(100vh - 70px)")
)
)
)
# Define the server that performs all necessary operations ----
server <- function(input, output, session){
source("Server.R", local = TRUE)
}
# Run the application ----
shinyApp(ui, server)
# Run global script containing all your relevant data ----
source("Global.R")
